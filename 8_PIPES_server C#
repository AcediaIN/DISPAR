using System.Diagnostics;
using System.IO.Pipes;
using System.Timers;

namespace SpeedMeasurement.Server
{
    class ServerPipe
    {
        public const string PipeName = "test-pipe";
        public const int BufferSize = 1024 * 1024 * 1024;

        private readonly NamedPipeServerStream serverStream;

        public ServerPipe()
        {
            serverStream = new NamedPipeServerStream(PipeName);
        }

        public async Task Listen()
        {
            await serverStream.WaitForConnectionAsync();
            Console.WriteLine("Client connected.");

            var buffer = new Memory<byte>(new byte[BufferSize]);

            while (true)
            {
                var stopwatch = Stopwatch.StartNew();

                var bytesRead = await serverStream.ReadAsync(buffer);

                stopwatch.Stop();

                var mbS = (bytesRead / (stopwatch.ElapsedMilliseconds / 1000.0)) / Math.Pow(1024, 2);

                Console.WriteLine($"Speed {mbS.ToString("0.0")} Mb/s");
            }
        }
    }

    internal class Program
    {
        static async Task Main(string[] args)
        {
            var server = new ServerPipe();

            await server.Listen();
        }
    }
}
